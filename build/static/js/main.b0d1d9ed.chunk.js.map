{"version":3,"sources":["components/firebase/firebase.js","components/firebase/index.js","components/session/withAuthentication.js","constants/routes.js","components/landing/index.js","components/sign-up/index.js","components/sign-in/index.js","components/tasklist/TaskList.js","components/home/index.js","components/account/index.js","components/sign-out/index.js","components/navbar/Navbar.js","components/createtask/CreateTask.js","components/community/Post.js","components/community/Board.js","components/reviews/Review.js","components/reviews/Bored.js","components/faq/faq.js","components/calendar/Calendar.js","components/viewjob/ViewJob.js","components/app/App.js","serviceWorker.js","index.js"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","Provider","value","HOME","Landing","props","className","src","alt","to","type","NormalSignUp","currentStep","htmlFor","name","placeholder","id","defaultValue","onChange","e","isVolunteer","target","setVol","isVol","setCurrentStep","SignUpVol","makeDisabled","event","setIsInvalid","disabled","isInvalid","SignUpLink","withRouter","handleSignUp","useCallback","a","preventDefault","elements","email","passwordOne","passwordTwo","addressOne","addressTwo","city","state","zip","role","createUserWithEmailAndPassword","then","result","updateProfile","displayName","console","log","history","push","ROUTES","alert","_next","tempStep","Fragment","onSubmit","onClick","SignInForm","handleLogin","password","signInWithEmailAndPassword","useContext","Task","task","headline","createdAt","substring","List","tasks","length","map","currtask","key","_id","pathname","setSelectedID","TaskList","setTasks","setEmail","editing","setEditing","selectedID","user","search","concat","axios","get","response","des_task","data","reverse","catch","error","Home","AccountPage","settings","items","title","url","index","onPaneLeave","wasSaved","newSettings","oldSettings","closeButtonClass","saveButtonClass","header","handler","for","changedSettings","options","label","signOut","bind","NavAuth","href","class","NavUnAuth","Navbar","Step1","trade","setTrade","required","selected","Step2","setTask","Step3","setHeadline","Step4","date","setDate","CreateTask","Date","currStep","newSubmission","post","window","location","Post","text","aria-label","aria-describedby","Board","setPost","postList","setPostList","newPost","currPost","Review","review","Bored","setReview","reviewList","setReviewList","newReview","currReview","faq","CalendarComponent","hr1","min1","sec1","hr2","min2","sec2","before","setBefore","after","setAfter","setError","changed","setChanged","outputError","selectRange","toLocaleString","indexOf","style","width","values","valid","i","Number","parseInt","ViewJob","created","setCreated","curr_task","filter","t","ID","delete","res","handleDelete","App","path","component","Calendar","exact","LandingPage","SignUpPage","SignInPage","HomePage","join","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d1d9ed.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\nexport default app;\n\n","import app from './firebase';\n// import FirebaseContext, {withFirebase} from './context'\n \nexport default app;\n \n//export { FirebaseContext, withFirebase };","import React, {useEffect, useState} from \"react\";\nimport app from \"../firebase\"\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({children}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  return(\n    <AuthContext.Provider value={{currentUser}}>\n        {children}\n      </AuthContext.Provider>\n  );\n};","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_UP_VOL = '/signup/vol';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/settings/general';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/forgotPassword';\nexport const CREATE = '/create';\nexport const COMMUNITY = '/community'\nexport const CALENDAR = '/calendar';\nexport const VIEWJOB = '/viewjob';\nexport const FAQ = '/faq';\nexport const REVIEWS = '/reviews';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport '../index.css'\n  \nconst Landing = (props) => {\n\n\n  return (\n    <div className='container landing-page'>\n      <div className='overlay'>\n        <img src='https://greenindustryplatform.org/sites/default/files/styles/large/public/learning-resources/image/sol-518339-unsplash.jpg?itok=B4GJAY6_' \n          alt='background'\n           />\n      </div>\n\n      <Link to={ROUTES.SIGN_IN} className=\"nav-link\">\n        <button type=\"button\" className=\"btn btn-primary btn-lg\">Post a job</button>\n      </Link>\n    \n    \n    </div>\n  );\n  };\n \nexport default Landing;","import React, {useCallback, useState} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport * as ROUTES from '../../constants/routes';\nimport app from '../firebase/firebase'\n\n\nconst SignUpPage = (props) => {\n    const [isInvalid, setIsInvalid] = useState(true);\n    const [skills, setSkills] = useState([]);\n    const [businessName, setBusinessName] = useState('');\n    const [businessWebsite, setBusinessWebsite] = useState('');\n    const [currentStep, setCurrentStep] = useState(1);\n    const [isVol, setVol] = useState('');\n\n    // handles everything that happens on signup\n    const handleSignUp = useCallback(async event => {\n        event.preventDefault();\n        const {name, email, passwordOne, passwordTwo, addressOne, addressTwo, city, state, zip, role} = event.target.elements;\n        try {\n            // This is so a volunteer user account isn't created before finishing the signup\n            await app\n            .auth()\n            .createUserWithEmailAndPassword(email.value, passwordOne.value).then((result) => {\n                const user = app.auth().currentUser;\n                return user.updateProfile({\n                    displayName: name.value\n                });\n            });\n            console.log(role.value);\n            props.history.push(ROUTES.HOME);\n            \n        } catch (error) {\n            alert(error);\n        }\n    }, [props.history]);\n\n    const _next = () => {\n        let tempStep = currentStep;\n        // If the current step is 1, then add one to it\n        tempStep = tempStep >= 2 ? 2: tempStep + 1;\n        setCurrentStep(tempStep);\n    }\n\n    const nextButton = () => {\n        let tempStep = currentStep;\n        if(tempStep < 2) {\n            return (\n                <button \n                    className=\"btn btn-primary\"\n                    type=\"button\"\n                    onClick={_next}>\n                    Continue\n                </button>\n            );\n        };\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            <div>\n                <h1>Sign Up</h1>\n                <form onSubmit={handleSignUp}>\n                    <NormalSignUp currentStep={currentStep} setVol={setVol} isVol={isVol}/>\n                    <SignUpVol currentStep={currentStep} setIsInvalid={setIsInvalid} isInvalid={isInvalid}/>\n                    {nextButton()}\n                </form>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst NormalSignUp = (props) => {\n    if(props.currentStep < 1) {\n        return null;\n    }\n    const checkVol = (e) => {\n        const {isVolunteer} = e.target.value;\n        props.setVol(isVolunteer);\n        if(props.isVol === 'volunteerH') {\n            props.setCurrentStep(2);\n        }\n        \n    }\n\n    return (\n        <div>            \n            <div className=\"form-group\">\n                <label htmlFor=\"inputName\">Name *</label>\n                <input\n                name=\"name\"\n                //value={name}\n                //onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Full Name\"\n                className=\"form-control\"\n                id=\"inputName\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputEmail4\">Email *</label>\n                <input\n                name=\"email\"\n                //value={email}\n                //onChange={this.onChange}\n                type=\"email\"\n                placeholder=\"Email Address\"\n                className=\"form-control\"\n                id=\"inputEmail4\"\n                />\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputPassword4\">Password *</label>\n                    <input\n                    name=\"passwordOne\"\n                    //value={passwordOne}\n                    //onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"form-control\"\n                    id=\"inputPassword4\"\n                    />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputPassword5\">Confirm Password *</label>\n                    <input\n                    name=\"passwordTwo\"\n                    //value={passwordTwo}\n                    //onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Re-enter Password\"\n                    className=\"form-control\"\n                    id=\"inputPassword5\"\n                    />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputAddress1\">Address *</label>\n                <input\n                name=\"addressOne\"\n                //value={addressOne}\n                //onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"1234 Main St\"\n                className=\"form-control\"\n                id=\"inputAddress1\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputAddress2\">Address 2</label>\n                <input\n                name=\"addressTwo\"\n                //value={addressTwo}\n                //onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Apartment, studio, or floor\"\n                className=\"form-control\"\n                id=\"inputAddress2\"\n                />\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputCity\">City *</label>\n                    <input \n                    name=\"city\"\n                    //value={city}\n                    //onChange={this.onChange}\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"inputCity\"\n                    />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"inputState\">State *</label>\n                    <select id=\"inputState\" className=\"form-control\" name=\"state\" /*value={state} onChange={this.onChange}*/>\n                        <option defaultValue>Choose...</option>\n                        <option value=\"AL\">Alabama</option>\n                        <option value=\"AK\">Alaska</option>\n                        <option value=\"AZ\">Arizona</option>\n                        <option value=\"AR\">Arkansas</option>\n                        <option value=\"CA\">California</option>\n                        <option value=\"CO\">Colorado</option>\n                        <option value=\"CT\">Connecticut</option>\n                        <option value=\"DE\">Delaware</option>\n                        <option value=\"DC\">District Of Columbia</option>\n                        <option value=\"FL\">Florida</option>\n                        <option value=\"GA\">Georgia</option>\n                        <option value=\"HI\">Hawaii</option>\n                        <option value=\"ID\">Idaho</option>\n                        <option value=\"IL\">Illinois</option>\n                        <option value=\"IN\">Indiana</option>\n                        <option value=\"IA\">Iowa</option>\n                        <option value=\"KS\">Kansas</option>\n                        <option value=\"KY\">Kentucky</option>\n                        <option value=\"LA\">Louisiana</option>\n                        <option value=\"ME\">Maine</option>\n                        <option value=\"MD\">Maryland</option>\n                        <option value=\"MA\">Massachusetts</option>\n                        <option value=\"MI\">Michigan</option>\n                        <option value=\"MN\">Minnesota</option>\n                        <option value=\"MS\">Mississippi</option>\n                        <option value=\"MO\">Missouri</option>\n                        <option value=\"MT\">Montana</option>\n                        <option value=\"NE\">Nebraska</option>\n                        <option value=\"NV\">Nevada</option>\n                        <option value=\"NH\">New Hampshire</option>\n                        <option value=\"NJ\">New Jersey</option>\n                        <option value=\"NM\">New Mexico</option>\n                        <option value=\"NY\">New York</option>\n                        <option value=\"NC\">North Carolina</option>\n                        <option value=\"ND\">North Dakota</option>\n                        <option value=\"OH\">Ohio</option>\n                        <option value=\"OK\">Oklahoma</option>\n                        <option value=\"OR\">Oregon</option>\n                        <option value=\"PA\">Pennsylvania</option>\n                        <option value=\"RI\">Rhode Island</option>\n                        <option value=\"SC\">South Carolina</option>\n                        <option value=\"SD\">South Dakota</option>\n                        <option value=\"TN\">Tennessee</option>\n                        <option value=\"TX\">Texas</option>\n                        <option value=\"UT\">Utah</option>\n                        <option value=\"VT\">Vermont</option>\n                        <option value=\"VA\">Virginia</option>\n                        <option value=\"WA\">Washington</option>\n                        <option value=\"WV\">West Virginia</option>\n                        <option value=\"WI\">Wisconsin</option>\n                        <option value=\"WY\">Wyoming</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-2\">\n                    <label htmlFor=\"inputZip\">Zip *</label>\n                    <input \n                    name=\"zip\"\n                    //value={zip}\n                    //onChange={this.onChange}\n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"inputZip\"\n                    />\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputRole\">User Role *</label>\n                    <select id=\"inputRole\" className=\"form-control\" name=\"role\" /*value={role}*/ onChange={checkVol}>\n                        <option defaultValue>Chose role...</option>\n                        <option value=\"cs\">Regular Customer</option>\n                        <option value=\"volunteerD\">Volunteer Driver</option>\n                        <option value=\"volunteerH\">Volunteer Handyman</option>\n                    </select>\n                </div>\n            </div>\n            \n    </div>\n    )\n};\n\n\nconst SignUpVol = (props) => {\n    // Makes sure the extra volunteer info doesn't need to be shown if the user isn't a volunteer\n    if(props.currentStep < 2) {\n        return null;\n    }\n\n    \n\n    // Makes the other options about entering business info disabled if person selects No to having a personal business\n    const makeDisabled = (event) => {\n        if(event.target.value === \"No\") {\n            props.setIsInvalid(true);\n        } else {\n            props.setIsInvalid(false);\n        }\n    }\n\n    return(\n        <div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-2\">\n                    <label htmlFor=\"inputSkill\">Skill *</label>\n                    <select id=\"inputSkill\" className=\"form-control\" name=\"skill\">\n                        <option defaultValue>Choose Skill...</option>\n                    </select>\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <label htmlFor=\"option1 option2\">Do you have a personal business? *</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n                <input \n                    className=\"form-check-input\" \n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    id=\"inlineRadioYes\"\n                    value=\"Yes\"\n                    onChange={makeDisabled}\n                />\n                <label className=\"form-check-lable\" htmlFor=\"inlineRadioYes\">Yes</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n                <input \n                    className=\"form-check-input\" \n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    id=\"inlineRadioNo\"\n                    value=\"No\"\n                    onChange={makeDisabled}\n                />\n                <label className=\"form-check-lable\" htmlFor=\"inlineRadioYes\">No</label>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"business-name\">Name of Business</label>\n                    <input\n                        name=\"business\"\n                        type=\"text\"\n                        placeholder=\"(Optional)\"\n                        className=\"form-control\"\n                        id=\"business\"\n                        disabled={props.isInvalid}\n                    />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"business-website\">Business website</label>\n                    <input  \n                        className=\"form-control\"\n                        name=\"website\"\n                        placeholder=\"(Optional)\"\n                        id=\"businessWeb\"\n                        disabled={props.isInvalid}\n                    />\n                </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Finish Sign Up</button>\n        </div>\n    )\n}\n\n// Gives users a link to sign up if they do not have an account already\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n);\n\nexport default withRouter(SignUpPage);\nexport {SignUpLink};","import React, {useCallback, useContext} from 'react';\nimport {withRouter, Redirect} from 'react-router-dom';\n\nimport {SignUpLink} from '../sign-up';\nimport * as ROUTES from '../../constants/routes';\nimport {AuthContext} from '../session/withAuthentication';\nimport app from '../firebase/firebase'\n\nconst SignInPage = () => (\n    <div>\n        <h1>Login</h1>\n        <SignInForm />\n        <SignUpLink />  {/* This allows to still reach the sign up page even when trying to login */}\n    </div>\n);\n\nconst SignInForm = ({history}) => {\n    const handleLogin = useCallback(\n        async event => {\n            event.preventDefault();\n            // these variable bind to the names given to the input boxes\n            const {email, password} = event.target.elements;\n            try {\n                await app  \n                    .auth()\n                    .signInWithEmailAndPassword(email.value, password.value);\n                    //history.push(ROUTES.LANDING);\n            } catch (error) {\n                alert(error);\n            }\n        }, []);\n\n    const {currentUser} = useContext(AuthContext);\n\n    if(currentUser) {\n        return <Redirect to={ROUTES.HOME} />;\n    }\n\n    return (\n        <form onSubmit={handleLogin}>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <input\n                    name=\"email\"\n                    //value={email}\n                    type=\"email\"\n                    placeholder=\"Email Address\"\n                    className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <input\n                    name=\"password\"\n                    //value={password}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"form-control\"\n                    />\n                </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n        </form>\n    );\n}\n\nexport default withRouter(SignInPage);\nexport {SignInForm};","/*\n * This file lists all the currently listed tasks for the logged in user, with the newest one first.\n */\nimport React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport * as firebase from \"firebase/app\";\nimport * as ROUTES from '../../constants/routes';\n\n// Individual list components for each task\nconst Task =(props) => {\n    return (\n        <div>\n            <div className='card-header bg-light card-head font-weight-bold'>{props.task.headline}</div>\n            <div className='card-body'>\n                <p className='card-title'>{props.task.task}</p>\n                <h5 className='card-text'>Created on {props.task.createdAt.substring(0,10)}</h5>  \n            </div>\n        </div>\n    );\n};\n\nconst TaskList = (props) => {\n\n    const [tasks, setTasks] = useState([]);\n    const [email, setEmail] = useState('');\n    const [editing, setEditing] = useState(false);\n    const [selectedID, setSelectedID] = useState('');\n\n    // Runs only once. Gets current users email and sends get request to database for all listings\n    // with that email\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n            //console.log(\"signed in\");\n            //console.log(user.email);\n            setEmail(user.email);\n            let url = 'http://localhost:5000/tasks/';\n            let search = url.concat(user.email);\n            //console.log(email);\n            //console.log(search);\n            axios.get(search)\n            .then(response => {\n                let asc_task = response.data;\n                let des_task = asc_task.reverse(); // Show newest tasks first\n                setTasks(des_task);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            } \n        });\n    }, []);\n\n    // Create a row for each task \n    \n\n    return (\n        <div>\n            <ul className='posted-jobs_list'>\n                <List \n                    tasks={tasks} \n                    editing={editing} \n                    setEditing={setEditing}\n                    selectedID={selectedID}\n                    setSelectedID={setSelectedID} \n                />\n            </ul>\n        </div>\n    );\n\n};\n\nconst List = (props) => {\n    console.log(props.tasks);\n    if (props.tasks.length === 0) {\n        console.log(\"here\");\n        return (\n            <p>No jobs posted</p>\n        )\n\n    } else {\n        return props.tasks.map(currtask => {\n            return (\n                <div className='card mb-3'>\n                    <Task task={currtask} key={currtask._id}/>\n                    <div className='card-body text-left'>\n                        <Link to={\n                            {\n                                pathname: '/job/' + currtask._id,\n                                id: currtask._id\n                            }\n                        } className=\"nav-link\">\n                            <button type=\"button\" className=\"btn btn-success btn-sm\" onClick={() => {props.setSelectedID(currtask._id)}}>View job</button>\n                        </Link>\n                    </div>\n                </div>\n            );\n        });\n    }\n};\n\n/*const Edit = (props) => {\n    console.log(\"made into editing\");\n    console.log(props.editing);\n    if (props.ID !== props.selectedID) {\n        return null;\n    }\n\n    return (\n        <div>\n            <p>Editing option chosen</p>\n        </div>\n    );\n}*/\n\nexport default TaskList;","/*\n *  This will load the page for logged in users to view their open tasks. It will list all currently open tasks\n *  for the user and will also have a sidebar option to create another task.\n */\nimport React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport * as firebase from \"firebase/app\";\nimport TaskList from \"../tasklist/TaskList\";\n  \nconst Home = (props) => {\n\n  return (\n    <div>\n      <h1></h1>\n      <div className='container page'>\n        <div className='content'>\n          <div className='row'>\n              <div className='viewjob-main right-marg'>\n                <div className='mb-panel posted-jobs' id='my-posted-jobs'>\n                  <h1 className='heading-large'>\n                    My posted jobs\n                  </h1>\n                  <TaskList/>\n                </div>\n              </div>\n              <div className='edit-sidebar'>\n                <div className='mb-panel'>\n                  <div className='mb-panel_header'>\n                    <h3 className='heading-caps'>Post a new job</h3>\n                  </div> \n                  <p className='cont-body'>Click here to create a new job and let volunteers near you see!</p>\n                  <div className=\"actions\">\n                    <Link to={ROUTES.CREATE} className=\"nav-link\">\n                      <button type=\"button\" className=\"btn btn-success btn-lg\">Post a job</button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n \nexport default Home;","import React from 'react';\nimport {SettingsPane, SettingsPage, SettingsContent, SettingsMenu} from 'react-settings-pane';\nimport './style.css';\n\nconst AccountPage = (props) => {\n    let settings = {\n        'mysettings.general.name': 'Dennis Stücken',\n        'mysettings.general.color-theme': 'purple',\n        'mysettings.general.email': 'dstuecken@react-settings-pane.com',\n        'mysettings.general.picture': 'earth',\n        'mysettings.profile.firstname': 'Dennis',\n        'mysettings.profile.lastname': 'Stücken',\n    }\n    // Define your menu\n    const menu = [\n    {\n        title: 'General',          // Title that is displayed as text in the menu\n        url: '/settings/general'  // Identifier (url-slug)\n    },\n    {\n        title: 'Profile',\n        url: '/settings/profile'\n    }\n    ];\n\n    // Define one of your Settings pages\n    const dynamicOptionsForProfilePage = [\n    {\n        key: 'mysettings.general.email',\n        label: 'E-Mail address',\n        type: 'text',\n    },\n    {\n        key: 'mysettings.general.password',\n        label: 'Password',\n        type: 'password',\n    }\n    ];\n\n    // Save settings after close\n    const leavePaneHandler = (wasSaved, newSettings, oldSettings) => {\n    // \"wasSaved\" indicates wheather the pane was just closed or the save button was clicked.\n\n    if (wasSaved && newSettings !== oldSettings) {\n        // do something with the settings, e.g. save via ajax.\n    }\n    };\n\n    const settingsChanged = (changedSettings) => {\n    // this is triggered onChange of the inputs\n    };\n\n    // Return your Settings Pane\n    return (\n        <SettingsPane items={menu} index=\"/settings/general\" settings={settings} onPaneLeave={leavePaneHandler}>\n        <SettingsMenu headline=\"Settings\" />\n        <SettingsContent closeButtonClass=\"secondary\" saveButtonClass=\"primary\" header={true}>\n            <SettingsPage handler=\"/settings/general\">\n            <fieldset className=\"form-group\">\n                <label for=\"profileName\">Name: </label>\n                <input type=\"text\" className=\"form-control\" name=\"mysettings.general.name\" placeholder=\"Name\" id=\"general.ame\" onChange={settingsChanged} defaultValue={settings['mysettings.general.name']} />\n            </fieldset>\n            <fieldset className=\"form-group\">\n                <label for=\"profileColor\">Color-Theme: </label>\n                <select name=\"mysettings.general.color-theme\" id=\"profileColor\" className=\"form-control\" defaultValue={settings['mysettings.general.color-theme']}>\n                <option value=\"blue\">Blue</option>\n                <option value=\"red\">Red</option>\n                <option value=\"purple\">Purple</option>\n                <option value=\"orange\">Orange</option>\n                </select>\n            </fieldset>\n            </SettingsPage>\n            <SettingsPage handler=\"/settings/profile\" options={dynamicOptionsForProfilePage} />\n        </SettingsContent>\n        </SettingsPane>\n    )\n    \n}\n\nexport default AccountPage;\n","import React from \"react\";\nimport app from \"../firebase\";\nimport {withRouter} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignOutButton = ({history}) => {\n    const handleSignOut = () => {\n        try {\n            app.auth().signOut();\n            history.push(ROUTES.LANDING); // Makes sure the person gets back to the landing page after logout\n        } catch (error) {\n            alert(error);\n        } \n    };\n\n    return (\n    <button type=\"button\" onClick={handleSignOut.bind(this)}>\n         Sign Out\n     </button>\n    )\n}\n\nexport default withRouter(SignOutButton);","import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport SignOutButton from '../sign-out';\nimport {AuthContext} from '../session/withAuthentication';\nimport app from '../firebase/firebase'\n\n\nconst Navbar = () => {\n    const {currentUser} = useContext(AuthContext);\n    return(\n        <div className='header'>\n            {currentUser ? <NavAuth /> : <NavUnAuth />}\n            {console.log(currentUser)}\n        </div>\n    );\n};\n\nconst NavAuth = () => (\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg navbar-fixed-top\">\n        <div className='container'>\n        <a className='navbar-brand' href={ROUTES.HOME}> Home Order</a>\n        <div className=\"collpase navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n                    <Link to=\"/create\" className=\"nav-link\">\n                        <button type='button' className='btn btn-light'>Create Job</button>\n                    </Link>\n                <div class=\"dropdown\">\n                    <button class=\"dropbtn\">Social</button>\n                    <div class=\"dropdown-content\">\n                        <a href=\"/reviews\">Volunteer Reviews</a>\n                        <a href=\"/community\">Community Board</a>\n                        <a href=\"/faq\">FAQ</a>\n                    </div>\n                </div>\n                <div class=\"dropdown\">\n                    <button class=\"dropbtn\">User Account</button>\n                    <div class=\"dropdown-content\">\n                        <a href=\"/settings/general\">Control Panel</a>\n                        <a href=\"/settings/profile\">Edit Profile</a>\n                    </div>\n                </div>\n                <div class=\"dropdown\">\n                    <Link to=\"/calendar\" class=\"lonk\">Calendar</Link>\n                </div>\n            </ul>\n            <span className=\"navbar-text\">Hello, {app.auth().currentUser.displayName}!</span> {/* shows the logged in users name */}\n            <li className=\"navbar-text\">\n                <SignOutButton className='btn btn-light'/>\n            </li>\n        </div>\n        </div>\n    </nav>\n);\n\nconst NavUnAuth = () => (\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-sm stick-top\">\n        <div className='container'>\n        <a className='navbar-brand' href={ROUTES.HOME}> Home Order</a>\n        <div className=\"collpase navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n                <Link to=\"/create\" className=\"nav-link\">\n                    <button type='button' className='btn btn-light'>Create Job</button>\n                </Link>\n            <div class=\"dropdown\">\n                <button class=\"dropbtn\">Social</button>\n                <div class=\"dropdown-content\">\n                    <a href=\"/reviews\">Volunteer Reviews</a>\n                    <a href=\"/community\">Community Board</a>\n                    <a href=\"/faq\">FAQ</a>\n                </div>\n            </div>\n            <div class=\"dropdown\">\n                <button class=\"dropbtn\">Calendar</button>\n                <div class=\"dropdown-content\">\n                    <a href=\"/calendar\">Calendar</a>\n                </div>\n            </div>\n            \n            </ul>\n            <div class=\"dropdown\">\n                <button class=\"dropbtn\">Account</button>\n                <div class=\"dropdown-content\">\n                    <a href=\"/signin\">Sign-In</a>\n                    <a href=\"/signup\">Sign-Up</a>\n                </div>\n            </div>\n        </div>\n        </div>\n    </nav>\n)\n\n\nexport default Navbar;        \n","/*\n * This file loads the form for users to submit tasks.\n*/\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport * as firebase from \"firebase/app\";\nimport * as ROUTES from '../../constants/routes';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n//https://css-tricks.com/the-magic-of-react-based-multi-step-forms/\nconst CreateTask = (props) => {\n\n    const [currentStep, setCurrentStep] = useState(1);\n    const [email, setEmail] = useState('');\n    const [headline, setHeadline] = useState('');\n    const [trade, setTrade] = useState('');\n    const [task, setTask] = useState('');\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n      firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n          //console.log(\"signed in\");\n          //console.log(user.email);\n          setEmail(user.email);\n        } \n      });\n      }, []);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n      \n        let newSubmission = {\n            headline: headline,\n            task: task,\n            email: email,\n            date: date\n        };\n        //console.log(newSubmission);\n        axios.post('http://localhost:5000/tasks/add', newSubmission);\n\n        window.location = ROUTES.HOME;\n        setCurrentStep(1);\n        setEmail('');\n        setHeadline('');\n        setTrade('');\n        setTask('');\n        setDate(new Date());\n    };\n\n    const handleDateChange = date => setDate(date);\n\n    const _next = () => {\n        let currStep = currentStep\n        // If the current step is 1 or 2, then add one on \"next\" button click\n        currStep = currStep >= 4 ? 4: currStep + 1\n        setCurrentStep(currStep);\n    };\n        \n    const _prev = () => {\n        let currStep = currentStep\n        // If the current step is 2 or 3, then subtract one on \"previous\" button click\n        currStep = currStep <= 1 ? 1: currStep - 1\n        setCurrentStep(currStep);\n    };\n\n    const previousButton = () => {\n        let currStep = currentStep;\n        if(currStep !== 0) {\n          return (\n            <button \n              className=\"btn btn-secondary\" \n              type=\"button\" onClick={_prev}>\n                Previous\n            </button>\n          );\n        };\n        return null;\n    }\n      \n    const nextButton = () => {\n      let currStep = currentStep;\n      if(currStep < 4) {\n        return (\n          <button \n            className=\"btn btn-danger btn-lg btn-block\" \n            type=\"button\" onClick={_next}>\n              Next step\n          </button>        \n        );\n      };\n      return null;\n    };\n\n    return (\n        <React.Fragment>\n          <div className='form-container'>\n            <h1>Post a job</h1>              \n            <form onSubmit={handleSubmit}>\n                <Step1 \n                currentStep={currentStep} \n                setTrade={setTrade}\n                trade={trade}\n                />\n                <Step2 \n                currentStep={currentStep} \n                setTask={setTask}\n                task={task}\n                />\n                <Step3\n                currentStep={currentStep} \n                setHeadline={setHeadline}\n                headline={headline}\n                />\n                <Step4 \n                currentStep={currentStep} \n                setDate={handleDateChange}\n                date={date}\n                />\n                {nextButton()} \n            </form>\n          </div>\n        </React.Fragment>\n    );\n\n};\n\nconst Step1 = (props) => {\n    if (props.currentStep < 1) {\n        return null;\n    }\n\n    return (\n        <div className=\"form-group\">\n            <label className='form-question' for='select-trade'>What type of work do you need help with?</label>\n            <select\n            className=\"custom-select\"\n            id=\"select-trade\"\n            name='select-trade'\n            value={props.trade} \n            onChange={e => props.setTrade(e.target.value)}\n            required='required'>\n              <option selected disabled value=''>Choose a category</option>\n              <option>Carpentry</option>\n              <option>Electrical</option>\n              <option>Fencing</option>\n              <option>Heating and Air Conditioning</option>\n              <option>Driveway</option>\n              <option>Guttering</option>\n              <option>Handyman</option>\n              <option>Insulation</option>\n              <option>Painting and Decorating</option>\n              <option>Locksmith</option>\n              <option>Appliances</option>\n              <option>Security Systems</option>\n              <option>Plumbing</option>\n              <option>Roofing</option>\n              <option>Windows</option>\n              <option>Pool</option>\n              <option>Gardening and Landscaping</option>\n              <option>I'm not sure what to pick</option>\n            </select>\n            <div className='invalid-tooltip'>Please select an option</div>\n          </div> \n    );\n};\n\nconst Step2 = (props) => {\n    if (props.currentStep < 2) {\n      return null\n    } \n    return(\n      <div className=\"form-group\">\n        <label>Describe the task in detail</label>\n        <textarea\n          className=\"form-control\"\n          id=\"task\"\n          name=\"task\"\n          type=\"text\"\n          placeholder=\"I need a new washing machine installed on the first floor, and the old washing machine dispose of.\"\n          value={props.task}\n          onChange={e => props.setTask(e.target.value)}\n          />\n      </div>\n    );\n  };\n\n  const Step3 = (props) => {\n    if (props.currentStep < 3) {\n      return null\n    } \n    return(\n      <div className=\"form-group\">\n        <label>Create a headline for your job</label>\n        <input\n          className=\"form-control\"\n          id=\"headline\"\n          name=\"headline\"\n          type=\"text\"\n          placeholder=\"New washing machine installed\"\n          value={props.headline}\n          onChange={e => props.setHeadline(e.target.value)}\n          />\n      </div>\n    );\n  };\n  \nconst Step4 = (props) => {\n    if (props.currentStep < 4) {\n      return null\n    } \n    return(\n      <React.Fragment>\n      <div className=\"form-group\">\n        <label>When would you like the task done?</label>\n        <DatePicker\n          selected={props.date}\n          onChange={props.setDate}   \n        />   \n      </div>\n      <button className=\"btn btn-success btn-block\">Submit task</button>\n      </React.Fragment>\n    );\n  };\n\nexport default CreateTask;","import React from 'react';\n\nconst Post = (props) => {\n    \n    return (\n        <div className=\"card post-editor\">\n            <div className=\"card-body\">\n                \n                    {props.post.text}\n        \n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Answer this question\" aria-label=\"Answer\" aria-describedby=\"button-addon2\"></input>\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-primary\" type=\"button\" id=\"button-addon2\">Submit reply</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Post;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from './Post'\n\nconst Board = (props) => {\n    const [post, setPost] = useState('');\n    const [postList, setPostList] = useState([]);\n\n    useEffect(() => {\n        axios.get('http://localhost:5000/posts/')\n            .then(response => {\n                setPostList(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, []);\n\n\n    const PostList = () => {\n        return postList.map(currPost => {\n            return <Post post={currPost} key={currPost._id}/>;\n        });\n    };\n\n    const createPost = (e) => {\n        e.preventDefault();\n        let newPost = {\n            text: post\n        };\n        axios.post('http://localhost:5000/posts/add', newPost);  \n        \n        window.location = '/community';\n        setPost('');\n        \n    };\n    return(\n        <div>\n            <h1>\n                Community Board\n            </h1>\n            <h3>\n                Ask questions and get answers from experts in your area\n            </h3>          \n\n            <div className=\"card post-editor\">\n                <div className=\"card-body\">\n                    Ask a question\n                    <form onSubmit={createPost}>\n                        <div className=\"form-group\">\n                            <textarea className=\"form-control post-editor-input\"\n                                value={post}\n                                onChange={e => setPost(e.target.value)}    \n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Submit Post\" className=\"btn btn-primary\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            { PostList() }\n\n        </div>  \n    );\n    }\n\nexport default Board;","import React from 'react';\n\nconst Review = (props) => {\n    \n    return (\n        <div className=\"card post-editor\">\n            <div className=\"card-body\"> \n                    {props.review.text}\n            </div>\n        </div>\n    );\n};\nexport default Review;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Review from './Review'\n\nconst Bored = (props) => {\n    const [review, setReview] = useState('');\n    const [reviewList, setReviewList] = useState([]);\n\n    useEffect(() => {\n        axios.get('http://localhost:5000/reviews/')\n            .then(response => {\n                setReviewList(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, []);\n\n\n    const ReviewList = () => {\n        return reviewList.map(currReview => {\n            return <Review review={currReview} key={currReview._id}/>;\n        });\n    };\n\n    const createReview = (e) => {\n        e.preventDefault();\n        let newReview = {\n            text: review\n        };\n        axios.post('http://localhost:5000/reviews/add', newReview);  \n        \n        window.location = '/reviews';\n        setReview('');\n        \n    };\n    return(\n        <div>\n            <h1>\n                Review Board\n            </h1>\n            <h3>\n                Tell us how we did\n            </h3>          \n\n            <div className=\"card post-editor\">\n                <div className=\"card-body\">\n                    Post a Review\n                    <form onSubmit={createReview}>\n                        <div className=\"form-group\">\n                            <textarea className=\"form-control post-editor-input\"\n                                value={review}\n                                onChange={e => setReview(e.target.value)}    \n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Submit Review\" className=\"btn btn-primary\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            { ReviewList() }\n\n        </div>  \n    );\n    }\n\nexport default Bored;","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport * as ROUTES from '../../constants/routes';\nimport app from '../firebase/firebase'\n\nconst faq = () => {\n\nreturn(  \n<div class = \"faqprofile\">\n  <h1>Frequently Asked Questions</h1>\n        <h3>Q: How do I place an order?</h3>\n        <h5>A: If you click the button above that says \"Create Job\" it will walk you through the process\n            of posting a job.\n        </h5>\n    <br></br>\n        <h3>Q: How do I become a volunteer if I'm already signed up?</h3>\n        <h5>A: If you go into your <Link to={ROUTES.ACCOUNT}>Account</Link>, you can \n        update any personal information you need as well as change member type between \"Volunteer\" and \"Customer\" </h5>\n    <br></br>\n        <h3>Q: Do you store all my information that goes into the sign-up?</h3>\n        <h5>A: No, the only information that is stored is your username for verification of a valid account.</h5>\n    <br></br>\n        <h3>Q: This is my first time using Home Order, are there any reviews I can see of current volunteers?</h3>\n        <h5>A: You can actually check them out on the <Link to={ROUTES.REVIEWS}>reviews</Link> section. </h5>\n    <br></br>\n        <h3>Q: I've never done any home projects before, can Home Order help me figure out what I need?</h3>\n        <h5>A: Yes, if you go to our <Link to={ROUTES.COMMUNITY}>community board</Link> you can ask get help from \n        both volunteers and other people to narrow down what you may need.</h5>\n\n  </div>\n);\n}\n\nexport default faq;","import React, {useState/*, Component*/} from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst CalendarComponent = (props) => {\n\tconst [date, setDate] = useState(new Date());\n\t\n\tconst [hr1, setHour1] = useState(12);\n\tconst [min1, setMin1] = useState(0);\n\tconst [sec1, setSec1] = useState(0);\n\t\n\tconst [hr2, setHour2] = useState(12);\n\tconst [min2, setMin2] = useState(0);\n\tconst [sec2, setSec2] = useState(0);\n\t\n\tconst [before, setBefore] = useState(\"AM\");\n\tconst [after, setAfter] = useState(\"PM\");\n\t\n\tconst onChange = date => {\n\t\tsetDate(date)\n\t};\n\t/*const onClickDay = day => {\n\t\t\n\t};*/\n\tconst [error, setError] = useState(\"\");\n\tconst [changed, setChanged] = useState(false);\n\t\n\tconst confirmChoice = () => {\n\t\tconsole.log(date);\n\t\t/* check if input was not changed */\n\t\tif(!changed){\n\t\t\tsetError(\"Error: input not changed. Enter integers in between 0 and 12 or 0 and 59.\");\n\t\t\tconsole.log(\"Error: input not changed. Enter integers in between 0 and 12 or 0 and 59.\");\n\t\t}else{\n\t\t\t/* check if prev time comes before after time */\n\t\t\tif(before === \"PM\" && after === \"AM\"){\n\t\t\t\tsetError(\"Error: invalid timespan. Enter times in chronological order.\");\n\t\t\t\tconsole.log(\"Error: invalid timespan. Enter times in chronological order.\");\n\t\t\t}else{\n\t\t\t\tvar values = [hr1, min1, sec1, hr2, min2, sec2];\n\t\t\t\tvar valid = true;\n\t\t\t\tfor(var i = 0; i < values.length; i++){\n\t\t\t\t\tconsole.log(values[i]);\n\t\t\t\t\tif(Number(values[i]) === parseInt(Number(values[i]), 10)){\n\t\t\t\t\t\tif(i % 3 === 0 && (values[i] < 1 || values[i] > 12) || i % 3 !== 0 && (values[i] < 0 || values[i] > 59)){\n\t\t\t\t\t\t\tsetError(\"Error: input is out of bounds. Enter integers in between 1 and 12 or 0 and 59.\");\n\t\t\t\t\t\t\tconsole.log(\"Error: input is out of bounds. Enter integers in between 1 and 12 or 0 and 59.\");\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsetError(\"Error: input is not an integer.\");\n\t\t\t\t\t\tconsole.log(\"Error: input is not an integer.\");\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(valid === true){\n\t\t\t\t\tfor(var i = 0; i < values.length; i++){\n\t\t\t\t\t\t//correct input\n\t\t\t\t\t\tsetError(\"Hours added!\");\n\t\t\t\t\t\tconsole.log(\"Hours added!\");\n\t\t\t\t\t\tvalues[i] = Number(values[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(before);\n\t\t\t\tconsole.log(after);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction outputError() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{error}\n\t\t\t</div>\n\t\t);\n\t}\n\tvar outputError = outputError();\n\t\n\treturn(\n\t\t<div>\n\t\t\t<div class = \"donk\">\n\t\t\t\t<div>\n\t\t\t\t\t<Calendar \n\t\t\t\t\t\tonChange = {onChange}\n\t\t\t\t\t\tselectRange = {true}\n\t\t\t\t\t\tvalue = {date}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t\t<div class = \"donk\">\n\t\t\t\tClick on a date twice or select a range of dates.\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t\t<div class = \"donk\">\n\t\t\t--------------------------------------------------------------------------------------------------\n\t\t\t</div>\n\t\t\t{/* check if date is null to prevent errors */}\n\t\t\t{date.length > 1 && date[0].toLocaleString().substring(0, date[0].toLocaleString().indexOf(\",\")) === date[1].toLocaleString().substring(0, date[1].toLocaleString().indexOf(\",\")) ? (\n\t\t\t\t/* same day */\n\t\t\t\t<div class = \"donk\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\tSelected day:\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;{date[0].toLocaleString().substring(0, date[0].toLocaleString().indexOf(\",\"))}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t</div>&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\tplaceholder = \"12\"\n\t\t\t\t\t\t\tonChange={e => setHour1(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t/>:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\tplaceholder = \"00\"\n\t\t\t\t\t\t\tonChange={e => setMin1(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t/>:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\tplaceholder = \"00\"\n\t\t\t\t\t\t\tonChange={e => setSec1(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t/>&nbsp;\n\t\t\t\t\t\t<select id=\"inputAMPM1\" onChange={e => setBefore(e.target.value)}>\n\t\t\t\t\t\t\t<option defaultValue>AM</option>\n\t\t\t\t\t\t\t<option value=\"PM\">PM</option>\n\t\t\t\t\t\t</select>&nbsp;to&nbsp;\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\tplaceholder = \"11\"\n\t\t\t\t\t\t\tonChange={e => setHour2(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t/>:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\tplaceholder = \"59\"\n\t\t\t\t\t\t\tonChange={e => setMin2(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t/>:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\tplaceholder = \"59\"\n\t\t\t\t\t\t\tonChange={e => setSec2(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t/>&nbsp;\n\t\t\t\t\t\t<select id=\"inputAMPM2\" onChange={e => setAfter(e.target.value)}>\n\t\t\t\t\t\t\t<option defaultValue>PM</option>\n\t\t\t\t\t\t\t<option value=\"AM\">AM</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t/* range of dates */\n\t\t\t\tdate[1] == null ? (\n\t\t\t\t\t<div class = \"donk\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tSelected day(s):\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tNone. Please select the same date or a different date.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div class = \"donk\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tSelected days:\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;{date[0].toLocaleString().substring(0, date[0].toLocaleString().indexOf(\",\"))}\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;--&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\t\t\tplaceholder = \"12\"\n\t\t\t\t\t\t\t\t\tonChange={e => setHour1(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t\t\t/>:\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\t\t\tplaceholder = \"00\"\n\t\t\t\t\t\t\t\t\tonChange={e => setMin1(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t\t\t/>:\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\t\t\tplaceholder = \"00\"\n\t\t\t\t\t\t\t\t\tonChange={e => setSec1(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t\t\t/>&nbsp;\n\t\t\t\t\t\t\t\t<select id=\"inputAMPM3\" onChange={e => setBefore(e.target.value)}>\n\t\t\t\t\t\t\t\t\t<option defaultValue>AM</option>\n\t\t\t\t\t\t\t\t\t<option value=\"PM\">PM</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;to\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;{date[1].toLocaleString().substring(0, date[1].toLocaleString().indexOf(\",\"))}\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;--&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\t\t\tplaceholder = \"11\"\n\t\t\t\t\t\t\t\t\tonChange={e => setHour2(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t\t\t/>:\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\t\t\tplaceholder = \"59\"\n\t\t\t\t\t\t\t\t\tonChange={e => setMin2(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t\t\t/>:\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tstyle = {{width: 25}}\n\t\t\t\t\t\t\t\t\ttype = \"numeric\"\n\t\t\t\t\t\t\t\t\tplaceholder = \"59\"\n\t\t\t\t\t\t\t\t\tonChange={e => setSec2(e.target.value), () => setChanged(true)}\n\t\t\t\t\t\t\t\t/>&nbsp;\n\t\t\t\t\t\t\t\t<select id=\"inputAMPM4\" onChange={e => setAfter(e.target.value)}>\n\t\t\t\t\t\t\t\t\t<option defaultValue>PM</option>\n\t\t\t\t\t\t\t\t\t<option value=\"AM\">AM</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t)}\n\t\t\t<div class = \"donk\">\n\t\t\t\t--------------------------------------------------------------------------------------------------\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t\t<div class = \"donk\">\n\t\t\t\t<button className=\"btn btn-primary\" onClick = {confirmChoice}>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Output Error if there is one */}\n\t\t\t<div>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t\t<div class = \"donk\">\n\t\t\t{outputError}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CalendarComponent;","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport * as firebase from \"firebase/app\";\nimport * as ROUTES from '../../constants/routes';\n\nconst ViewJob = (props) => {\n    const [task, setTask] = useState('');\n    const [tasks, setTasks] = useState([]);\n    const [headline, setHeadline] = useState('');\n    const [date, setDate] = useState(new Date());\n    const [created, setCreated] = useState('');\n    const [email, setEmail] = useState('');\n    //const [editing, setEditing] = useState(false);\n    //const [selectedID, setSelectedID] = useState('');\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n            //console.log(\"signed in\");\n            //console.log(user.email);\n            setEmail(user.email);\n            let url = 'http://localhost:5000/tasks/';\n            let search = url.concat(user.email);\n            //console.log(email);\n            //console.log(search);\n            axios.get(search)\n            .then(response => {\n                let tasks_list = response.data;\n                let curr_task = tasks_list.filter(t => t._id === props.location.id);\n                //console.log(curr_task[0].task);\n                setHeadline(curr_task[0].headline);\n                setTask(curr_task[0].task);\n                setDate(curr_task[0].date);\n                setCreated(curr_task[0].createdAt.substring(0,10));\n                \n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            } \n        });\n    }, []);\n\n    const handleDelete = (e) => {\n        //e.preventDefault();\n\n        let ID = props.location.id;\n        let url = 'http://localhost:5000/tasks/';\n        let search = url.concat(ID);\n        console.log(search);\n      \n        axios.delete(search)\n            .then(res => {\n                console.log(res.data)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n        \n            \n\n        console.log('###########');\n\n        window.location = ROUTES.HOME;\n       \n        setEmail('');\n        setHeadline('');\n        setTasks([]);\n        setTask('');\n        setDate(new Date());\n        setCreated('');\n    };\n\n    return (\n        <div className='container page'>\n            <div className='content'>\n                <div className='row'>\n                    <div className='viewjob-header'>\n                        <div className='mb-panel'>\n                            <h3 className='card-title'>{headline}</h3>\n                            <h5 className='card-text'>Created on {created}</h5>\n                        </div>\n                    </div>\n                    <div className='edit-sidebar'>\n                        <div className='mb-panel'>\n                            <div className='mb-panel-header'>\n                                <p className='cont-body'>Edit job</p>\n                                <a href='#' onClick={()=>{handleDelete()}} >Delete job</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='viewjob-main'>\n                        <div className='mb-panel'>\n                            <div className='card mb-3'>\n                                <div className='card-header bg-light card-head font-weight-bold'>Job description</div>\n                                <div className='card-body'>\n                                    <p className='card-title'>{task}</p> \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ViewJob;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {AuthProvider} from \"../session/withAuthentication\";\n\nimport * as ROUTES from '../../constants/routes';\n\nimport LandingPage from '../landing';\nimport SignUpPage from '../sign-up';\nimport SignInPage from '../sign-in';\nimport PasswordForgetPage from '../password-forgot';\nimport HomePage from '../home';\nimport AccountPage from '../account';\nimport AdminPage from '../admin';\n\nimport '../index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"../navbar/Navbar\";\nimport TaskList from \"../tasklist/TaskList\";\nimport CreateTask from \"../createtask/CreateTask\";\nimport Board from '../community/Board';\nimport Bored from '../reviews/Bored';\nimport faq from '../faq/faq';\n//npm install react-calendar or yarn add react-calendar\nimport Calendar from '../calendar/Calendar'\nimport ViewJob from '../viewjob/ViewJob'\nimport path from 'path'\n\nconst App = () => {\n  return(\n    <div className='page'>\n    <AuthProvider>\n      <Router>\n        <div className='c'>\n          <Navbar />\n          <br />\n          <div className='body'>\n          <Route path={ROUTES.CREATE} component={CreateTask} />\n          <Route path={ROUTES.COMMUNITY} component={Board}/>\n          <Route path={ROUTES.REVIEWS} component={Bored} />\n          <Route path={ROUTES.CALENDAR} component={Calendar} />\n          <Route path={ROUTES.FAQ} component={faq} />\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          {/* <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} /> */}\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={path.join(\"/job\", \":id?\")} component={ViewJob} />\n          {/* <Route path={ROUTES.ADMIN} component={AdminPage} />   */}\n          </div>\n        </div>\n      </Router>\n    </AuthProvider>\n    \n    <footer className='site-footer'>\n      <div className='container'>\n        <h3>The page was made possible by Gator Delivery</h3>\n      </div>\n    </footer>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/index.css';\nimport App from './components/app/App.js';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  // Ensures that the firebase connection/instance only happens once\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}